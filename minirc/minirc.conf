#!/bin/bash

declare -r DAEMONS="dhcpcd sshd ntpd mariadb mongodb redis vnc trade dns samba pulse haveged"
declare -r ENABLED="dhcpcd sshd ntpd vnc trade dns pulse haveged"

declare -r LOGDIR="/var/log/minirc"
declare -r PIDDIR="/tmp/minirc"

mkdir -p -m 777 "${PIDDIR}"
mkdir -p -m 777 "${LOGDIR}"

daemon_execute() {

    # ${1} -> service
    # ${2} -> user
    # ${3} -> command

    local pidfile="${PIDDIR}/${1}.pid"
    local logfile="${LOGDIR}/${1}.log"

    echo -e "Starting ${1}..."

    if daemon_poll "${1}"
    then
        echo -e "Error: ${pidfile} exists"
    else
        echo "User:    ${2}"
        echo "Command: ${3}"
        echo "PID:     ${pidfile}"
        echo "Log:     ${logfile}"
        echo "started ${1}" >> "${logfile}"
        sudo -u ${2} sh -c "echo \$\$ > ${pidfile}; exec ${3}" |& awk -v src="${1}" '{ print "["src"]["strftime("%Y-%m-%dT%H:%M:%S")"] "$0; fflush(); }' >> "${logfile}" &
    fi

}

daemon_start() {

    case "${1}" in
    mariadb)
        daemon_execute ${1} mysql "/usr/bin/mysqld --init-file=/etc/mysql/init_file";;
    mongodb)
        daemon_execute ${1} mongodb "/usr/bin/mongod --config /etc/mongodb.conf";;
    redis)
        daemon_execute ${1} redis "/usr/bin/redis-server /etc/redis.conf";;
    samba)
        daemon_execute ${1} root "/usr/bin/smbd --log-stdout --foreground --no-process-group";;
    dhcpcd)
        daemon_execute ${1} root "/usr/bin/dhcpcd -n -B -z enp2s0";;
    sshd)
        daemon_execute ${1} root "/usr/bin/sshd -D -e";;
    ntpd)
        daemon_execute ${1} root "/usr/bin/ntpd -n -g -u ntp";;
    vnc)
        daemon_execute ${1} igor "/home/igor/arch/scripts/vnc.sh";;
    trade)
        daemon_execute ${1} igor "/usr/bin/node /home/igor/arch/trade/main.js";;
    dns)
        daemon_execute ${1} igor "/home/igor/arch/dyndns/dns.sh";;
    pulse)
        daemon_execute ${1} igor "/usr/bin/pulseaudio --daemonize=no";;
    haveged)
        daemon_execute ${1} root "/usr/bin/haveged -w 1024 -v 1 --Foreground";;
    *)
        echo -e "Error: unknown service: ${1}";;
    esac

}

daemon_stop() {

    local pidfile="${PIDDIR}/${1}.pid"
    local logfile="${LOGDIR}/${1}.log"

    echo -e "Stopping ${1}..."

    if daemon_poll "${1}"
    then
        local pid="$(cat ${pidfile})"
        echo -ne "Killing ${pid}... "

        sudo -u root sh -c "kill ${pid}"
        timeout 10 tail --pid="${pid}" -f /dev/null

        sudo -u root sh -c "kill -9 ${pid} &> /dev/null"
        timeout 10 tail --pid="${pid}" -f /dev/null

        echo "killed."
        rm -rf "${pidfile}"
        echo "stopped ${1}" >> "${logfile}"
    else
        echo -e "Error: ${pidfile} does not exist or service is not running"
    fi

}

daemon_poll() {

    local pidfile="${PIDDIR}/${1}.pid"
    test -f "${pidfile}" && ps -p "$(cat "${pidfile}")" &> /dev/null

}
