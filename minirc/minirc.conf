#!/bin/bash

DAEMONS="dhcpcd sshd ntpd mongodb redis vnc trade samba pulse haveged cron"
ENABLED="dhcpcd sshd ntpd vnc trade haveged cron"
PIDDIR="/tmp/minirc"

mkdir -p -m 777 "${PIDDIR}"

# ${1} -> service
# ${2} -> user
# ${3} -> command
daemon_execute() {
    declare -r pidfile="${PIDDIR}/${1}.pid"
    echo -e "Starting ${1}..."

    if daemon_poll "${1}"
    then
        echo -e "Error: ${pidfile} exists"
    else
        declare -r fifo="$(mktemp -u)"
        
        sudo -u "${2}" mkfifo "${fifo}"
        sudo -u "${2}" sh -c "echo \$\$ > ${fifo}; exec ${3}" &> /dev/null &

        declare -r pid="$(cat "${fifo}")"
        echo "${pid}" > "${pidfile}"
        rm -f "${fifo}"
        echo "User: ${2}"
        echo "Exec: ${3}"
        echo "PID: ${pid}"
    fi
}

daemon_start() {
    case "${1}" in
    mongodb)
        daemon_execute "${1}" "mongodb" "/usr/bin/mongod --config /etc/mongodb.conf";;
    redis)
        daemon_execute "${1}" "redis" "/usr/bin/redis-server /etc/redis.conf";;
    samba)
        daemon_execute "${1}" "root" "/usr/bin/smbd --log-stdout --foreground --no-process-group";;
    dhcpcd)
        daemon_execute "${1}" "root" "/usr/bin/dhcpcd -n -B -z enp2s0";;
    sshd)
        daemon_execute "${1}" "root" "/usr/bin/sshd -D -e";;
    ntpd)
        daemon_execute "${1}" "root" "/usr/bin/ntpd -n -g -u ntp";;
    vnc)
        daemon_execute "${1}" "igor" "/home/igor/arch/scripts/vnc.sh";;
    trade)
        daemon_execute "${1}" "igor" "/usr/bin/node /home/igor/arch/trade/main.js --conky";;
    pulse)
        daemon_execute "${1}" "igor" "/usr/bin/pulseaudio --daemonize=no";;
    haveged)
        daemon_execute "${1}" "root" "/usr/bin/haveged -w 1024 -v 1 --Foreground";;
    cron)
        daemon_execute "${1}" "root" "/usr/bin/crond -n";;
    *)
        echo -e "Error: unknown service: ${1}";;
    esac
}

daemon_stop() {
    declare -r pidfile="${PIDDIR}/${1}.pid"
    echo -e "Stopping ${1}..."

    if daemon_poll "${1}"
    then
        declare -r pid="$(cat ${pidfile})"
        echo -ne "Killing ${pid}... "

        kill "${pid}"
        timeout 10 tail --pid="${pid}" -f /dev/null

        kill -9 "${pid}" &> /dev/null
        timeout 10 tail --pid="${pid}" -f /dev/null

        echo "killed."
        rm -rf "${pidfile}"
    else
        echo -e "Error: ${pidfile} does not exist or service is not running"
    fi
}

daemon_poll() {
    declare -r pidfile="${PIDDIR}/${1}.pid"
    test -f "${pidfile}" && ps -p "$(cat "${pidfile}")" &> /dev/null
}
