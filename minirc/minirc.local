#!/bin/sh

# bring ethernet interface up so udhcpc can operate
_ethernet='enp56s0u1u2c2'
for _i in $(seq 100)
do
    printf 'Waiting on interface %s to initialize (%s)\n' "${_ethernet}" "${_i}"
    ip link | grep -Fq "${_ethernet}"
    _ethec="${?}"
    
    # give some more time to settle
    sleep 1
    
    if [ "${_ethec}" -eq 0 ]
    then
        printf 'Interface %s is initialized, bringing interface up.\n' "${_ethernet}"
        ip link set "${_ethernet}" up
        break
    fi
done

# allow non-root to change fan speed
#chmod 666 /sys/devices/platform/asus-nb-wmi/hwmon/hwmon4/pwm1

# improve responsivness under heavy IO
printf '%s' "$((4*1024*1024))" > /proc/sys/vm/dirty_background_bytes
printf '%s' "$((4*1024*1024))" > /proc/sys/vm/dirty_bytes

# load (some) of the arch sysctl settings
_loadsysctl() {
    sysctl -p "/usr/lib/sysctl.d/${1}" > /dev/null
}

_loadsysctl "10-arch.conf"
_loadsysctl "50-default.conf"
_loadsysctl "50-pid-max.conf"

# prevent kernel from printing messages into framebuffer
printf '0' > /proc/sys/kernel/printk

# limit battery charge
printf '80' > /sys/class/power_supply/BAT0/charge_control_end_threshold

# create tmpfs dirs
#mkdir -p /run/samba
mkdir -p /run/postgresql
chown postgres:postgres /run/postgresql

# create XDG directories for current user (read from $HOME/.config/user-dirs.dirs and env.sh)
_uid="1000"
_user="$(getent passwd "${_uid}" | cut -d':' -f1)"

_mkxdg() {
    install -m 700 -g "${_user}" -o "${_user}" -d "/tmp/xdg-${_user}/${1}"
}

_mkxdg ""
_mkxdg "runtime"
_mkxdg "other"

# set CPU to performance preset
#printf 'performance' | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null
#printf '3100000'     | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_min_freq > /dev/null

# activate swap
swapon -U 471ae89a-9131-4de5-9126-a9129bbdc2b5

# write /etc/issue to display a nice greeting message
/home/igor/arch/scripts/info.sh > /etc/issue
